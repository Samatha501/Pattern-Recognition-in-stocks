Identify W Pattern

find the difference of P3 and P5
# diff = p5-p3

add it to p5 value
# p5_value = diff + p5

# Add two columns to dataframe as "P&L" and "Exit_Date(P6)".

Compare p5_value with next points of p5 and check if it is above the neck line i.e p3
consider next point as p6
##To calculate profit_target
# IF p6 >= p5_value AND p6 > p3
# THEN
    # profit_target -> p6_close_price
    # Exit_Date -> p6_date
    # append profit_target to P&L column in the dataframe
    # append Exit_Date column in the dataframe
# ENDIF
##To calculate stop_loss
# IF p6 >= p5_value AND p6 < p4
# THEN
    # stop_loss -> p6_close_price
    # Exit_Date -> p6_date
    # append stop_loss to P&L column in the dataframe
    # append Exit_Date column in the dataframe
# ENDIF
local_min_max_df['P&L']=""
local_min_max_df['Exit_date']=""
diff = (i+4)-(i+2)
p5_value = diff+(i+4)
#profit_target=p5
#stop_loss=i+2.close_price
data = TCS.csv file
next_point = local_min_max_df['index'].iloc[i+4]+1
#for n in range(next_point,len(data.index)):
  if(n < len(data.index)):
    #if (n>=profit_target and n>i+2):
        #P&L = (n)-(i+4)
        #exit_date = n.date
        #local_min_max_df=local_min_max_df.append({'P&L': P&L,'Exit_date':exit_date},ignore_index=True)
        #break

    #elif (n <= stop_loss):
        #P&L = (n)-(i+4)
        #exit_date = n.date
        #local_min_max_df=local_min_max_df.append({'P&L': P&L,'Exit_date':exit_date},ignore_index=True)
        #break
    #endif
#
#
#
#
Identify M Pattern

find the difference of P3 and P5
# diff = p5-p3

add it to p5 value
# p5_value = diff + p5

# Add two columns to dataframe as "P&L" and "Exit_Date(P6)".

Compare p5_value with next points of p5
consider next point as p6
##To calculate profit_target
 #profit_target = p5_value

##To calculate stop_loss
 #stop_loss = close price of neck value(p3)

# IF p6 <= p5_value AND p6 < p3
# THEN
    # P&L = entry(p5) - exit(p6)
    # Exit_Date -> p6_date
    # append profit_target to P&L column in the dataframe
    # append Exit_Date column in the dataframe
# ENDIF
##To calculate loss
# IF p6 >= stop_loss
# THEN
    # P&L = entry(p5) - exit(p6)
    # Exit_Date -> p6_date
    # append stop_loss to P&L column in the dataframe
    # append Exit_Date column in the dataframe
# ENDIF
##For proft and loss of M Pattern
diff = (i+2)-(i+4)
p5_value = diff+(i+4)
#profit_target=p5
#stop_loss=i+2.close_price
data = TCS.csv file
next_point = local_min_max_df['index'].iloc[i+4]+1
#for n in range(next_point,len(data.index)):
  if(n < len(data.index)):
    #if (n <= profit_target and n<i+2):
        #P&L = (i+4)-(n)
        #exit_date = n.date
        #local_min_max_df=local_min_max_df.append({'P&L': P&L,'Exit_date':exit_date},ignore_index=True)
        #break

    #elif (n >= stop_loss):
        #P&L = (i+4)-(n)
        #exit_date = n.date
        #local_min_max_df=local_min_max_df.append({'P&L': P&L,'Exit_date':exit_date},ignore_index=True)
        #break
    #endif













